{"version":3,"sources":["webpack:///webpack/bootstrap ffbbb0679a22c46063bf","webpack:///./client/js/Main.js","webpack:///./client/js/objects/Application.js","webpack:///./client/js/objects/Attribute.js","webpack:///./client/js/objects/Common.js","webpack:///./client/js/objects/AttributesPanel.js","webpack:///./client/js/objects/PopulationPanel.js","webpack:///./client/js/objects/StrategyPanel.js","webpack:///./client/js/objects/AttributesCollection.js","webpack:///./client/js/objects/attributs.json","webpack:///./client/js/objects/AttributeButton.js","webpack:///./client/js/objects/InformationsPanel.js","webpack:///./client/js/objects/Character.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;AACA;;AAEA;;AAEA;AACA,6BAA6B;;;;;;;;;;;;ACN7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB,MAAM,gBAAgB;AAC7E,wCAAwC,mBAAmB,sBAAsB,oBAAoB;AACrG;AACA;;AAEA,oE;;;;;;;;;ACrFA;AAAA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,YAAY;AACZ,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA,0E;;;;;;;;;;AC/KA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,wCAAwC;AAC7D,qBAAqB,oCAAoC;AACzD,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D,qBAAqB,iCAAiC;AACtD,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,6BAA6B;AACnD;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,0E;;;;;;;;;;;;ACxZA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,YAAY;AAC1B,cAAc,YAAY;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;;AAGA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D,aAAa;AACb,mCAAmC,kDAAkD;AACrF;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC5VA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC,IAAI;AACpC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wDAAwD,UAAU;AAClE;AACA,qCAAqC,MAAM;AAC3C,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,6C;;;;;;;;AClKA,kBAAkB,aAAa,WAAW,UAAU,uDAAuD,UAAU,6DAA6D,SAAS,4DAA4D,SAAS,UAAU,mEAAmE,SAAS,+DAA+D,SAAS,kE;;;;;;;;;;ACA9Z;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,gBAAgB;AAC/B,gBAAgB,MAAM;AACtB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;;AAEA,0E;;;;;;;;;AC/GA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,4E;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,2BAA2B;AACjD;AACA;AACA;;AAEA;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oE","file":"wwae.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ffbbb0679a22c46063bf","import Application from \"./objects/Application\";\r\nimport PopulationPanel from \"./objects/PopulationPanel\";\r\n\r\nexport let appInstance = new Application();\r\n\r\n//listener sur le redimensionnement de la fenêtred\r\nwindow.onresize = function(){appInstance.populationPanel.resize();};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/Main.js\n// module id = 0\n// module chunks = 0","import StrategyPanel from \"./StrategyPanel\";\nimport InformationsPanel from \"./InformationsPanel\";\nimport AttributesPanel from \"./AttributesPanel\";\nimport PopulationPanel from \"./PopulationPanel\";\n\n/**\n * Classe instanciant l'application, panel par panel.\n */\nclass Application {\n    /**\n     * Instancie tout les panels\n     */\n    constructor(){\n        this.attributesPanel = new AttributesPanel(this);\n        this.strategyPanel = new StrategyPanel(this);\n        this.populationPanel = new PopulationPanel(this);\n        this.informationsPanel = new InformationsPanel(this);\n    }\n\n    /**\n     * Retourne le panel stratégie\n     * @returns {StrategyPanel}\n     */\n    getStrategyPanel(){\n        return this.strategyPanel;\n    }\n\n    /**\n     * Retourne le panel Population\n     * @returns {PopulationPanel}\n     */\n    getPopulationPanel(){\n        return this.populationPanel;\n    }\n\n    /**\n     * Retourne le panel Attributs\n     * @returns {AttributesPanel}\n     */\n    getAttributesPanel(){\n        return this.attributesPanel;\n    }\n\n    /**\n     * Retourne le panel Informations\n     * @returns {InformationsPanel}\n     */\n    getInformationsPanel(){\n        return this.informationsPanel;\n    }\n}\n\nexport default Application;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/Application.js\n// module id = 1\n// module chunks = 0","/**\n * Représente un attribut d'un personnage avec une valeur.\n * Chaque instance d'Attribute ne contient qu'une seule valeur.\n */\nclass Attribute{\n    /**\n     * Constructeur\n     * @param {!AttributeJSON} jsonDesc Un objet JSON décrivant l'attribut\n     * @param {!string} attribute Le nom de l'attribut (ex : 'cheveux')\n     * @param {!string} value La valeur de l'attribut (ex : 'chauve')\n     * @throws {Error} Lance une erreur si jsonDesc n'est pas un objet ou si attribute ou value ne sont pas une chaîne\n     */\n    constructor(jsonDesc, attribute, value){\n        if(typeof jsonDesc !== \"object\"){\n            throw new Error(\"@Attribute.constructor() : L'argument jsonDesc doit être un objet JSON\");\n        }\n        if(typeof attribute !== \"string\"){\n            throw new Error(\"@Attribute.constructor() : L'argument attribute doit être une chaîne de caractère\");\n        }\n        if(typeof value !== \"string\"){\n            throw new Error(\"@Attribute.constructor() : L'argument value doit être une chaîne de caractère\");\n        }\n        /**\n         * Le nom de l'attribut\n         * @member {string}\n         */\n        this.attributeKey = attribute;\n        /**\n         * La valeur de l'attribut\n         * @member {string}\n         */\n        this.value = value;\n        /**\n         * Le test de la proposition au format court\n         * @member {string}\n         */\n        this.short = jsonDesc[\"court\"];\n        /**\n         * Le test de la proposition au format long\n         * @member {string}\n         */\n        this.long = jsonDesc[\"long\"];\n    }\n\n    /**\n     * Retourne la valeur de l'attribut (ex : 'chauve')\n     * @returns {string}\n     */\n    getValue(){\n        return this.value;\n    }\n\n    /**\n     * Retourne la proposition de l'attribut au format court\n     * @returns {string}\n     */\n    getShortText(){\n        return this.short;\n    }\n\n    /**\n     * Retourne la proposition de l'attribut au format long\n     * @returns {string}\n     */\n    getLongText(){\n        return this.long;\n    }\n\n    /**\n     * Retourne le nom de l'attribut\n     * @returns {string}\n     */\n    getAttributeKey(){\n        return this.attributeKey;\n    }\n\n    /**\n     * Affiche l'attribut dans la console\n     */\n    prettyPrint(){\n        console.log(`Attribut ${this.getAttributeKey()} -> ${this.getValue()} :`);\n        console.log(`\\ttexte long  : \"${this.getLongText()}\"\\n\\ttexte court : \"${this.getShortText()}\"`);\n    }\n}\n\nexport default Attribute;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/Attribute.js\n// module id = 2\n// module chunks = 0","/** @module Common */\n\n/**\n * L'objet décrivant l'arbre de stratégie pour Vis.js\n * @type {object}\n */\nexport let STRATEGY_OPTIONS = {\n    locale: 'en', //si on met fr ça casse\n    height: '100%',\n    width: '100%',\n    autoResize: true,\n    edges:{\n        arrows: {\n            to: true //affiche la flêche côté arrivé\n        }\n    },\n    layout: {\n        hierarchical: {\n            direction: 'UD' //diréction de la hiérachisation de l'arbre du haut vers le bas (Up Down)\n        }\n    },\n    interaction: {\n        hover: true //active la gestion des événements de survol des noeuds\n    },\n    manipulation: {\n        enabled: false //true -> affiche le petit menu edit\n    }\n};\n\n\n/**\n * Evenements disponible pour les ojets Vis.Network\n * @type {string[]}\n */\nconst NETWORK_EVENTS =   [\n                                    \"click\", \"doubleClick\", \"dragStart\", \"dragging\", \"dragEnd\", \"zoom\", \"showPopup\", \"hidePopup\",\n                                    \"select\", \"selectNode\", \"selectEdge\", \"deselectNode\", \"deselectEdge\",\n                                    \"hoverNode\", \"hoverEdge\", \"blurNode\", \"blurEdge\"\n                                ];\n\nObject.freeze(NETWORK_EVENTS);\n\n/**\n * Indique si le nom de l'événement donné est un événement supporté par Vis.js\n * @param {string} event le nom de l'événement\n * @returns {boolean} true si event est supporté, false sinon\n */\nexport function isNetworkEvent(event){\n    if(typeof event !== 'string')\n        return false;\n    else\n        return NETWORK_EVENTS.includes(event);\n}\n\n/**\n * Créer un HTMLElement div et le concatène à l'element parent.\n * @param {HTMLElement} parent le parent\n * @param {!string} childId l'id de l'élément à créer\n * @returns {HTMLElement|undefined} l'élément créé ou undefined si parent n'est pas un HTMLElement ou si childID n'est pas une chaîne\n */\nexport function createChildDiv(parent, childId){\n    if(!(parent instanceof HTMLElement) || typeof childId !== \"string\"){\n        return undefined;\n    }else{\n        let child = document.createElement('div');\n        child.setAttribute('id', childId);\n        parent.appendChild(child);\n        return child;\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/Common.js\n// module id = 3\n// module chunks = 0","import * as AttributesCollection from \"./AttributesCollection\";\r\nimport * as Common from './Common';\r\nimport Attribute from './Attribute';\r\nimport AttributeButton from './AttributeButton';\r\nimport Application from \"./Application\";\r\nimport * as Main from \"../Main\";\r\n\r\n/**\r\n * Panel contenant les boutons des attributs\r\n */\r\nclass AttributesPanel {\r\n    /**\r\n     * Constructeur.\r\n     * Instancie directement tout les boutons sans les cacher.\r\n     * @trhows {Error} Lance un erreur si element n'est pas une instance de HTMLElement\r\n     * @throws {Error} Lance une erreur si appInstance n'est pas une instance de Application\r\n     */\r\n    constructor(){\r\n        /**\r\n         * Singleton de la collection des attributs.\r\n         * @member {AttributesCollection}\r\n         */\r\n        this.attributesCollection = AttributesCollection.singleton;\r\n        /**\r\n         * Element HTML du panel\r\n         * @member {HTMLElement}\r\n         */\r\n        this.element = document.getElementById('attributs');\r\n        if(!(this.element instanceof HTMLElement)) {\r\n            throw new Error(\"@AttributesPanel() -> Erreur : element doit être une instance de HTMLElement d'id 'strategie-network'\");\r\n        }\r\n\r\n        //création des boutons\r\n        /**\r\n         * Liste des boutons du panel\r\n         * @member {Array<AttributeButton>}\r\n         */\r\n        this.buttons = [];\r\n        let map = this.attributesCollection.getAttributesValuesKeysMap();\r\n        map.forEach(attribute => {\r\n           this.buttons[attribute] = [];\r\n           map[attribute].forEach(value => {\r\n               this.buttons[attribute][value] = undefined;\r\n               try{\r\n                   this.addButton(this.attributesCollection.getAttributeInstance(attribute, value));\r\n               }catch(e){\r\n                   console.error(\"@AttributesPanel.constructor() : erreur lors de l'ajout du boutons (\"+attribute+\",\"+value+\") : \");\r\n                   console.error(e);\r\n               }\r\n           }) ;\r\n        });\r\n\r\n        this.removeAttributeButton = document.getElementById(\"boutonAnnulerSupposition\");\r\n        this.removeAttributeButton.addEventListener(\"click\", this.annulerSupposition);\r\n    }\r\n\r\n    /**\r\n     * Met à jour l'états des boutons des attributs en fonction de la sélection de l'arbre de stratégie\r\n     */\r\n    updateButtonsStatus(){\r\n        if(Main.appInstance === undefined){\r\n            return;\r\n        }\r\n        if(Main.appInstance.getStrategyPanel() === undefined){\r\n            return;\r\n        }\r\n        let selection = Main.appInstance.getStrategyPanel().getSelection();\r\n        if(Array.isArray(selection)){\r\n            if(selection.length === 1){\r\n                let node = selection[0];\r\n                if(node.attribute !== undefined && node.attribute !== null && node.attribute instanceof Attribute){\r\n                    this.removeAttributeButton.setAttribute(\"class\", \"btnActif\");\r\n                }\r\n                let nodes = Main.appInstance.getStrategyPanel().getNodes(selection);\r\n                if(Array.isArray(nodes) && nodes.length > 0){\r\n                    this.updateAttributesButtons(nodes);\r\n                }\r\n            }else{\r\n                this.removeAttributeButton.setAttribute(\"class\", \"btnInactif\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Met à jour la liste des boutons attributs à afficher en fonction de la slection donnée\r\n     * @param {!Object} nodes Liste des noeuds vis.js sélectionnés\r\n     */\r\n    updateAttributesButtons(nodes){\r\n        //TODO\r\n    }\r\n\r\n    /**\r\n     * Annule la supposition sur le noeud sélectionnée, si elle existe.\r\n     * @param event l'événement\r\n     */\r\n    annulerSupposition(event){\r\n        console.log(\"Annulation supposition\");\r\n        if(Main.appInstance === undefined){\r\n            return;\r\n        }\r\n        let strategyPanel = Main.appInstance.getStrategyPanel();\r\n        let attributesPanel = Main.appInstance.getAttributesPanel();\r\n        if(strategyPanel !== undefined && attributesPanel !== undefined){\r\n            strategyPanel.setAttributeToSelection(null);\r\n            attributesPanel.updateButtonsStatus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ajoute un bouton avec l'attribut donné s'il n'existe pas déja\r\n     * @param {!Attribute} attribute l'instance de l'attribut\r\n     * @throws {Error} Lance un erreur si attribute n'est pas une instance de Attribute\r\n     */\r\n    addButton(attribute){\r\n        if(!(attribute instanceof Attribute)){\r\n            throw new Error(\"@AttributesPanel.addButton() : L'attribut attribute doit être une instance de Attribute\");\r\n        }\r\n        if(!(this.buttons[attribute.getAttributeKey()][attribute.getValue()] instanceof AttributeButton)){\r\n            this.buttons[attribute.getAttributeKey()][attribute.getValue()] = new AttributeButton(attribute,this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Chache le bouton correspondant à l'attribut s'il existe\r\n     * @param {!Attribute} attribute l'instance de l'attribut\r\n     * @throws {Error} Lance un erreur si attribute n'est pas une instance de Attribute\r\n     */\r\n    hideButton(attribute){\r\n        if(!(attribute instanceof Attribute)){\r\n            throw new Error(\"@AttributesPanel.addButton() : L'attribut attribute doit être une instance de Attribute\");\r\n        }\r\n        if(this.buttons[attribute.getAttributeKey()][attribute.getValue()] instanceof Attribute){\r\n            this.buttons[attribute.getAttributeKey()][attribute.getValue()].hide();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rend visible le bouton correspondant à l'attribut s'il existe\r\n     * @param {!Attribute} attribute l'instance de l'attribut\r\n     * @throws {Error} Lance un erreur si attribute n'est pas une instance de Attribute\r\n     */\r\n    showButton(attribute){\r\n        if(!(attribute instanceof Attribute)){\r\n            throw new Error(\"@AttributesPanel.addButton() : L'attribut attribute doit être une instance de Attribute\");\r\n        }\r\n        if(this.buttons[attribute.getAttributeKey()][attribute.getValue()] instanceof Attribute) {\r\n            this.buttons[attribute.getAttributeKey()][attribute.getValue()].show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ajoute l'argument au noeuds sélectionné dans le panel de la stratégie,<br>\r\n     * et met à jour le statut des boutons.\r\n     * @param {!AttributeButton} button le bouton cliqué.\r\n     */\r\n    onButtonClick(button){\r\n        if(!(button instanceof AttributeButton)){\r\n            throw new Error(\"@AttributesPanel.onButtonClick() : L'attribut button doit être une instance de AttributeButton\");\r\n        }\r\n        //button.getAttribute().prettyPrint();\r\n        if(Main.appInstance.getStrategyPanel() !== undefined){\r\n            Main.appInstance.getStrategyPanel().setAttributeToSelection(button.getAttribute());\r\n            this.updateButtonsStatus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retourne l'élément HTML du panel\r\n     * @returns {HTMLElement} l'élément HTML\r\n     */\r\n    getElement(){\r\n        return this.element;\r\n    }\r\n}\r\n\r\nexport default AttributesPanel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/AttributesPanel.js\n// module id = 4\n// module chunks = 0","import Character from \"./Character\";\r\nimport Application from \"./Application\";\r\nimport * as Main from \"../Main\";\r\n\r\nconst popSize = 24;\r\nconst charWidth = 150;\r\nconst charHeight = 150;\r\nconst borderSize = 3;\r\n\r\nlet popJson =\r\n    {\r\n        \"characters\": [\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Magalie\",\r\n                \"img\" : \"./assets/charimg/magalie.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"rouquine\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"marrons\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"salope\"}\r\n                ]\r\n            },\r\n            {\r\n                \"nom\" : \"Joseph\",\r\n                \"img\" : \"./assets/charimg/joseph.png\",\r\n                \"attributs\" : [\r\n                    {\"key\" : \"cheveux\", \"value\" : \"blond\"},\r\n                    {\"key\" : \"yeux\", \"value\" : \"bleu\"},\r\n                    {\"key\" : \"personalité\", \"value\" : \"nazi\"}\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n\r\n/**\r\n * Classe représentant le panel de la population\r\n */\r\nclass PopulationPanel {\r\n\r\n    /**\r\n     *\r\n     * @throws {Error} Lance une erreur si appInstance n'est pas une instance de Application\r\n     */\r\n    constructor() {\r\n        this.population = new Array(popSize);\r\n        this.table = document.getElementById(\"tableChar\");\r\n        this.element = document.getElementById(\"population\");\r\n        this.load();\r\n        this.createButtons();\r\n        this.loadTable();\r\n        this.majPopInfo(popSize, 0);\r\n    }\r\n\r\n    load(){\r\n        let chars = popJson;\r\n        for(let i = 0; i < chars.characters.length; i++){\r\n            this.population[i] = new Character(chars.characters[i], i);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {!Number} i l'index du personnage\r\n     * @returns {Character} l'instance du personnage\r\n     */\r\n    getChar(i){\r\n        return this.population[i];\r\n    }\r\n\r\n    refresh(tabAttribute){\r\n        let actif = 0, elim = 0;\r\n        for(let i = 0; i < this.population.length; i++){\r\n            let bool = this.population[i].check(tabAttribute);\r\n            if(bool)\r\n                actif++;\r\n            else\r\n                elim++;\r\n        }\r\n        this.majPopInfo(actif, elim);\r\n    }\r\n\r\n    loadTable(){\r\n        let nbCol = Math.floor(this.element.offsetWidth/(charWidth + borderSize*2));\r\n        nbCol = (nbCol === 0) ? 1 : nbCol;\r\n        let nbRow = Math.ceil(popSize/nbCol);\r\n\r\n        //vide le tableau -> utile dans le cas d'un rechargement\r\n        this.table.innerHTML = \"\";\r\n\r\n        let row;\r\n        for(let i = 0; i < popSize; i++){\r\n            if(i % nbCol === 0){\r\n                row = this.addRow();\r\n            }\r\n            row.appendChild(this.addChar(this.getChar(i)));\r\n        }\r\n        this.centerCharInfos();\r\n        this.sizeTable()\r\n    }\r\n\r\n    addRow(){\r\n        let row = document.createElement(\"tr\");\r\n        this.table.appendChild(row);\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {!Character} char l'instance de Character\r\n     * @returns {HTMLTableDataCellElement} l'élément 'td' de la colonne\r\n     */\r\n    addChar(char){\r\n        let col = document.createElement(\"td\");\r\n        col.id = \"char\" + char.id;\r\n        col.className = \"charElem\";\r\n        col.innerHTML = `\r\n\t\t\t\t\t\t\t\t<figure id = 'charfigure` + char.id + `'>\r\n\t\t\t\t\t\t\t\t\t<img src ='` + char.img + `' alt='Perso` + char.id + `' id = 'charimg` + char.id + `'/>\r\n\t\t\t\t\t\t\t\t\t<figcaption>\r\n\t\t\t\t\t\t\t\t\t\t<div class = 'charInfo'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 id = 'charName'>` + char.nom +`</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<p id = 'charstatus` + char.id + `'>Suspect</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class = \"CharTooltip\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"arrow\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class='CharTooltip-text'>`+ char.listeAttribute() + `</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</figcaption>\r\n\t\t\t\t\t\t\t\t</figure>\r\n\t\t\t\t\t\t\t`;\r\n        return  col;\r\n    }\r\n\r\n    centerCharInfos(){\r\n        let charinfo = document.getElementsByClassName(\"charInfo\");\r\n        for(let i = 0; i < charinfo.length; i++){\r\n            this.centerInParent(charinfo[i]);\r\n        }\r\n    }\r\n\r\n    resize(){\r\n        this.loadTable();\r\n        let tab = [];//#TODO récupèré la liste d'attributs du noeud actif\r\n        this.refresh(tab);\r\n    }\r\n\r\n    sizeTable(){\r\n        let conteneurH = document.getElementById(\"PopulationConteneur\").clientHeight;\r\n        let titreH = document.getElementById(\"PopTitle\").offsetHeight;\r\n        document.getElementById(\"population\").style.height = conteneurH - titreH + \"px\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node ??\r\n     */\r\n    centerInParent(node){\r\n        //node.style.marginTop = node.parentNode.offsetHeight/2-node.offsetHeight/2 + \"px\";\r\n        node.style.marginTop = \"40px\";\r\n    }\r\n\r\n    majPopInfo(actif, elim){\r\n        document.getElementById(\"nbActif\").innerHTML = actif;\r\n        document.getElementById(\"nbElim\").innerHTML = elim;\r\n    }\r\n\r\n    /**\r\n     * Créer un bouton qui désactive le personnage d'index char.\r\n     * @param {!Number} char Index du personnage à éliminer\r\n     * @param {!String} text Text du bouton\r\n     * @param {!String} reason Raison de l'élimination\r\n     * @returns {HTMLButtonElement} Le bouton HTML\r\n     */\r\n    createUnactiveButton(char, text, reason){\r\n        let buttonElm = document.createElement(\"button\");\r\n        buttonElm.addEventListener(\"click\", ()=>{\r\n            this.getChar(char).unactive(reason);\r\n        });\r\n        buttonElm.innerText = text;\r\n        return buttonElm;\r\n    }\r\n\r\n    /**\r\n     * Créer un bouton qui active le personnage d'index char.\r\n     * @param {!Number} char Index du personnage à éliminer\r\n     * @param {!String} text Text du bouton\r\n     * @returns {HTMLButtonElement} Le bouton HTLM\r\n     */\r\n    createActiveButton(char, text){\r\n        let buttonElm = document.createElement(\"button\");\r\n        buttonElm.addEventListener(\"click\", ()=>{\r\n            this.getChar(char).active();\r\n        });\r\n        buttonElm.innerText = text;\r\n        return buttonElm;\r\n    }\r\n\r\n    /**\r\n     * Instancie les boutons d'activation/désactivation des personnages\r\n     */\r\n    createButtons(){\r\n        let buttonsElm = document.getElementById(\"populationButtons\");\r\n        buttonsElm.appendChild(this.createUnactiveButton(0, \"Désactive perso 0\",\"Trop moche\"));\r\n        buttonsElm.appendChild(this.createActiveButton(0, \"Active perso 0\"));\r\n        buttonsElm.appendChild(this.createUnactiveButton(1, \"Désactive perso 1\",\"Cheveux blond\"));\r\n        buttonsElm.appendChild(this.createActiveButton(1, \"Active perso 1\"));\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PopulationPanel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/PopulationPanel.js\n// module id = 5\n// module chunks = 0","import * as Common from './Common';\r\nimport AttributesPanel from \"./AttributesPanel\";\r\nimport Application from \"./Application\";\r\nimport Attribute from \"./Attribute\";\r\nimport * as Main from\"../Main\";\r\n\r\n//on a besoin de garder un pointeur vers une instance pour y accèder dans\r\n//les handlers des événements de vis.js car ces dèrnier sont\r\n//appelé avec un contexte différents définies par vis.js\r\nlet instance;\r\n\r\n/**\r\n * Callback pour un événement\r\n * @callback eventCallback\r\n * @param {Event} event Un événement\r\n */\r\n\r\n/**\r\n * @typedef {object} StrategyData\r\n * @property {vis.DataSet} nodes les noeuds\r\n * @property {vis.DataSet} edges les liens\r\n */\r\n\r\n/**\r\n * Représente le panel contenant l'arbre de stratégie.\r\n */\r\nclass StrategyPanel {\r\n    /**\r\n     *\r\n     * @throws {Error} Lance une erreur si element n'est pas une instance de HTMLElement\r\n     * @throws {Error} Lance une erreur si appInstance n'est pas une instance de Application\r\n     */\r\n    constructor(){\r\n        /**\r\n         * L'élément conteneur du panel\r\n         * @member {HTMLElement}\r\n         */\r\n        this.element = document.getElementById('strategie-network');\r\n        if(!(this.element instanceof HTMLElement)) {\r\n            throw new Error(\"@StrategyPanel() -> Erreur : element doit être une instance de HTMLElement d'id 'attributs'\");\r\n        }\r\n\r\n        /**\r\n         * Liste des noeuds de la stratégie\r\n         * @type {DataSet}\r\n         */\r\n        this.nodes = new vis.DataSet([]);\r\n\r\n        /**\r\n         * Liste des liens de la stratégie\r\n         * @type {DataSet}\r\n         */\r\n        this.edges = new vis.DataSet([]);\r\n\r\n\r\n        /**\r\n         * Données contenant les noeuds et les liens de l'arbre de stratégie\r\n         * @member {StrategyData}\r\n         */\r\n        this.data = {\r\n            nodes: this.nodes,\r\n            edges: this.edges\r\n        };\r\n\r\n        /**\r\n         * Instance de vis.Network permettant de visualiser l'arbre\r\n         * @member {vis.Network}\r\n         */\r\n        this.network = new vis.Network(this.element, this.data, Common.STRATEGY_OPTIONS);\r\n        this.setNetworkHandler(\"click\", this.onClick);\r\n        this.setNetworkHandler(\"doubleClick\", this.onDoubleClick);\r\n        this.setNetworkHandler(\"selectNode\", this.onSelectNode);\r\n        this.setNetworkHandler(\"deselectNode\", this.onDeselectNode);\r\n        instance = this;\r\n        this.addNode(1,'',0);\r\n    }\r\n\r\n    /**\r\n     * Retourne le Network de l'arbre de stratégie\r\n     * @returns {StrategyPanel.network}\r\n     */\r\n    network(){\r\n        return this.network;\r\n    }\r\n\r\n    /**\r\n     * Retourne le lien avec l'id donné\r\n     * @param id l'id du lien\r\n     * @returns {Object|undefined} le lien ou undefined\r\n     */\r\n    getEdge(id){\r\n        return this.data.edges.get(id);\r\n    }\r\n\r\n    /**\r\n     * Retourne le noeud avec l'id donné\r\n     * @param id l'id du noeud\r\n     * @returns {Object|undefined} le noeud ou undefined\r\n     */\r\n    getNode(id){\r\n        return this.data.nodes.get(id);\r\n    }\r\n\r\n    /**\r\n     * Définis un handler pour l'événement donnée, s'il est utilisable avec le Network\r\n     * @param {string} event La chaîne correspondant à l'événement\r\n     * @param {eventCallback} handler Callback de l'événement\r\n     * @see {@link module-Common.isNetworkEvent}\r\n     */\r\n    setNetworkHandler(event, handler){\r\n        if(typeof event === 'string' && typeof handler === 'function'){\r\n            if(Common.isNetworkEvent(event)){\r\n                this.network.on(event, handler);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Supprime le noeud donné en paramètre\r\n     * @param {object} node le noeud à supprimer\r\n     */\r\n    deleteNode(node){\r\n        //TODO éviter de supprimer la racine\r\n        this.data.nodes.remove(node);\r\n    }\r\n\r\n    /**\r\n     * Retourne le noeud père du noeud avec l'id donné\r\n     * @param {!Number} id l'id du noeud fils\r\n     * @returns {Number|undefined} L'id du noeud père ou undefined\r\n     */\r\n    getParentId(id){\r\n        this.data.edges.forEach((edge) => {\r\n            if (edge.to === id) {\r\n                return edge.from;\r\n            }\r\n        });\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     *  /**\r\n     * Retourne les ids des noeuds fils du noeud avec l'id donné\r\n     * @param {!Number} id l'id du noeud père\r\n     * @returns {Array} Les ids des noeuds fils\r\n     */\r\n    getChildsIds(id){\r\n        let sons = [];\r\n        this.data.edges.forEach((edge) => {\r\n            if (edge.from === id) {\r\n                sons.push(edge.to);\r\n            }\r\n        });\r\n        return sons;\r\n    }\r\n\r\n    /**\r\n     * Active le noeud donné\r\n     * @param {!Number} id le noeud à activer\r\n     */\r\n    enableNode(id){\r\n        if(id === undefined){\r\n            return;\r\n        }\r\n        // Remet la couleur du noeud par défaut\r\n        this.data.nodes.update([{\r\n            id:id,\r\n            enabled: true,\r\n            color:{\r\n                background:'#D2E5FF',\r\n                border:'#2B7CE9',\r\n                highlight:{\r\n                    background:'#D2E5FF',\r\n                    border:'#2B7CE9'\r\n                },\r\n                hover:{\r\n                    background:'#D2E5FF',\r\n                    border:'#2B7CE9'\r\n                }\r\n            }\r\n        }]);\r\n    }\r\n\r\n    /**\r\n     * Désactive le noeud donné\r\n     * @param {!Number} id le noeud à désactiver\r\n     */\r\n    disableNode(id){\r\n        if(id === undefined){\r\n            return;\r\n        }\r\n        // Remet la couleur du noeud par défaut\r\n        this.data.nodes.update([{\r\n            id:id,\r\n            enabled: false,\r\n            color:{\r\n                background:'#848484',\r\n                border:'#2E2E2E',\r\n                highlight:{\r\n                    background:'#A4A4A4',\r\n                    border:'#2E2E2E'\r\n                },\r\n                hover:{\r\n                    background:'#A4A4A4',\r\n                    border:'#2E2E2E'\r\n                }\r\n            }\r\n        }]);\r\n\r\n        // Si tous les fils sont désactivés, on les supprime\r\n        let allDisabled = true;\r\n        let sons = [];\r\n\r\n        this.data.edges.forEach((edge) => {\r\n            if (edge.from === id) {\r\n                let son = this.getNode(edge.to);\r\n\r\n                sons.push(son);\r\n\r\n                if(son.enabled) {\r\n                    allDisabled = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (allDisabled && sons.length !== 0) {\r\n            sons.forEach((son) => {\r\n                this.deleteNode(son);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Désactive ou active le noeud donné en paramètre et supprime les fils si désactivés\r\n     * @param {!Number} id le noeud à désactiver ou activer\r\n     */\r\n    updateNode(id){\r\n      if(this.getNode(id).enabled) {\r\n        this.disableNode(id);\r\n      } else {\r\n          this.enableNode(id);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Ajout un nouveau noeud au Network. La valeur attribute de ce noeud est initialisée à null.\r\n     * @param id l'id du noeud\r\n     * @param label le label du noeud\r\n     * @param level le niveau hiérarchique du noeud (le plus élevé est en bas de l'écran)\r\n     */\r\n    addNode(id, label, level){\r\n        this.data.nodes.add({id, label, level});\r\n        this.getNode(id).attribute = null;\r\n        this.disableNode(id);\r\n    }\r\n\r\n    /**\r\n     * Handler appelé lors des événement click sur le network\r\n     * @param {object} params Objet contenant les infos de l'événement\r\n     */\r\n    onClick(params){\r\n        params.event = \"[original event]\";\r\n        document.getElementById('eventSpan').innerHTML = '<h2>Click event:</h2>' + JSON.stringify(params, null, 4);\r\n        console.log('click event, getNodeAt returns: ' + this.getNodeAt(params.pointer.DOM));\r\n    }\r\n\r\n    /**\r\n     * Handler appelé lors des événement doubleClick sur le network\r\n     * @param {object} params Objet contenant les infos de l'événement\r\n     */\r\n    onDoubleClick(params){\r\n        let clickedNode = this.getNodeAt(params.pointer.DOM);\r\n        params.event = \"[original event]\";\r\n        document.getElementById('eventSpan').innerHTML = '<h2>DoubleClick event:</h2>' + JSON.stringify(params, null, 4);\r\n        console.log('click event, getNodeAt returns: ' + clickedNode);\r\n    }\r\n\r\n    onSelectNode(params){\r\n        if(Main.appInstance === undefined){\r\n            return;\r\n        }\r\n        Main.appInstance.getAttributesPanel().updateButtonsStatus();\r\n    }\r\n\r\n    onDeselectNode(params){\r\n        if(Main.appInstance === undefined){\r\n            return;\r\n        }\r\n        Main.appInstance.getAttributesPanel().updateButtonsStatus();\r\n    }\r\n\r\n    /**\r\n     * Retourne la liste des Noeuds selectionnés\r\n     * @returns {Array} les noeuds\r\n     */\r\n    getSelection(){\r\n        let selection = this.network.getSelectedNodes();\r\n        let nodes=[];\r\n        selection.forEach(id =>{\r\n            nodes.push(this.getNode(id));\r\n        });\r\n        return nodes;\r\n    }\r\n\r\n    /**\r\n     * Retourne la liste des noeuds avec les ids données, ou la liste complète des noeuds<br>\r\n     * si ids n'est pas un tableau ou n'est pas renseigné\r\n     * @param {string[]} [ids] la liste des identifiants des noeuds souhaités\r\n     * @returns {Array|DataSet} la liste des noeuds souhaités ou de tous les noeuds\r\n     */\r\n    getNodes(ids){\r\n        if(Array.isArray(ids)){\r\n            let nodes =  [];\r\n            ids.forEach(id => {\r\n               let node = this.getNode(id);\r\n               if(node !== undefined){\r\n                   nodes.push(node);\r\n               }\r\n            });\r\n            return nodes;\r\n        }else{\r\n            return this.nodes;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Définis la valeur d'un noeuds à l'attributs donné\r\n     * @param {!Attribute|null} attribute l'attribut à affecter au noeud sélectionné ou null\r\n     * @throws {Error} Lance une erreur si attribute n'est pas une instance de Attribute\r\n     */\r\n    setAttributeToSelection(attribute){\r\n        if(attribute !== null && !(attribute instanceof Attribute)){\r\n            throw new Error(\"@StrategyPanel() -> Erreur : attribute doit être une instance de Attribute\");\r\n        }\r\n        let selection = this.getSelection();\r\n        if(Array.isArray(selection) && selection.length === 1){\r\n            let selectedNode = selection[0];\r\n            selectedNode.attribute = attribute;\r\n            if(attribute === null){\r\n                this.nodes.update({id:selectedNode.id,label:\"\"});\r\n            }else{\r\n                this.nodes.update({id:selectedNode.id,label:attribute.getShortText()});\r\n                this.updateNode(selectedNode.id);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default StrategyPanel;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/StrategyPanel.js\n// module id = 6\n// module chunks = 0","import Attribute from './Attribute';\r\nimport attributsJSON from './attributs';\r\n\r\n/**\r\n * @typedef {Object} AttributeJSON\r\n * @property {string} long Une question décrivant la valeur l'attribut concerné (utilisée avec les boutons)\r\n * @property {string} court La même question au format plus court (utilisée pour l'arbre de stratégie)\r\n */\r\n\r\n/**\r\n * Gère une collection d'Attribute.\r\n * Cette classe est implémentée en tant que singleton accessible\r\n * avec AttributesCollection.singleton, en supposant avoir importé\r\n * la classe sous ce même nom\r\n */\r\nclass AttributesCollection{\r\n\r\n    /**\r\n     * Stocke le JSON dans 'attributs', construits un tableau 2D\r\n     * destiné à stocker chaque instance d'Attribute de sorte à\r\n     * ne pas dupliquer les instances inutilement.\r\n     */\r\n    constructor(){\r\n        /**\r\n         * Le JSON contenant les attributs et leurs valeurs\r\n         * @member {Object}\r\n         */\r\n        this.attributs = attributsJSON[\"attributs\"];\r\n        /**\r\n         * Un tableau 2D servant à contenir chaque instances d'Attribute.\r\n         * Chaque Attribute n'est effectivement instancié qu'après l'appel de la\r\n         * méthode getAttributeInstance().\r\n         * @member {Attribute[][]}\r\n         */\r\n        this.attributesMap = this.getAttributesValuesKeysMap();\r\n        this.attributesMap.forEach(attribute => {\r\n            this.attributesMap[attribute].forEach(value => {\r\n                this.attributesMap[attribute][value] = undefined;\r\n            });\r\n        });\r\n        this.prettyPrint();\r\n    }\r\n\r\n    /**\r\n     * Retourne la liste des attributs contenu dans la collection.\r\n     * @returns {string[]} la liste des attributs\r\n     */\r\n    getAttributesKeys(){\r\n        return _.allKeys(this.attributs);\r\n    }\r\n\r\n    /**\r\n     * Retourne la liste des valeurs pour un attribut, ou undefined s'il n'existe pas.\r\n     * @param attribute l'attribut\r\n     * @returns {string[]|undefined} la liste des valeur de l'attribut\r\n     */\r\n    getValuesKeys(attribute){\r\n        if(this.checkAttributeExists(attribute)){\r\n            return _.allKeys(this.attributs[attribute]);\r\n        }else{\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retourne l'objet JSON représentant un Attribute correspondant à l'attribut\r\n     * de valeurs donnés, ou undefined si l'un ou l'autre n'existe pas.\r\n     * @param attribute l'attribut\r\n     * @param value la valeur\r\n     * @returns {AttributeJSON|undefined}\r\n     */\r\n    getAttributeJSON(attribute, value){\r\n        if(this.checkValueExists(attribute, value)){\r\n            return this.attributs[attribute][value];\r\n        }else{\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retourne l'instance d'Attribute pour un attribut et une valeur données.\r\n     * @param attribute l'attribut\r\n     * @param value la valeur\r\n     * @returns {Attribute|undefined}\r\n     */\r\n    getAttributeInstance(attribute, value){\r\n        let jsonAttribute = this.getAttributeJSON(attribute, value);\r\n        if(jsonAttribute !== undefined){\r\n            if(this.attributesMap[attribute][value] === undefined) {\r\n                let attr = new Attribute(jsonAttribute, attribute, value);\r\n                this.attributesMap[attribute][value] = attr;\r\n                return attr;\r\n            }else{\r\n                return this.attributesMap[attribute][value];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Vérifie que l'attribut existe dans la collection.\r\n     * @param attribute l'attribut\r\n     * @returns {boolean} true si l'attribut existe, false sinon.\r\n     */\r\n    checkAttributeExists(attribute){\r\n        return typeof attribute === \"string\" && this.getAttributesKeys().includes(attribute);\r\n    }\r\n\r\n    /**\r\n     * Vérifie que la valeur existe pour l'attribut donné\r\n     * @param attribute l'attribut\r\n     * @param value la valeur\r\n     * @returns {boolean} true si la valeur existe pour l'attribut donné, false sinon.\r\n     */\r\n    checkValueExists(attribute, value){\r\n        if(this.checkAttributeExists(attribute)){\r\n            return this.getValuesKeys(attribute).includes(value);\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retourne un tableau 2D contenant les listes des valeurs pour chaque attributs.\r\n     * @example\r\n     * //Supposons que le JSON contient un attribut 'yeux' ayant deux valeurs, 'bleu' et 'vert'\r\n     * let map = singleton.getAttributesValuesKeysMap();\r\n     * console.log(map['yeux']); //{'bleu','vert'}\r\n     * @returns {string[][]}\r\n     */\r\n    getAttributesValuesKeysMap(){\r\n        let map = this.getAttributesKeys();\r\n        if(map !== undefined){\r\n            map.forEach(key => {\r\n                map[key] = this.getValuesKeys(key);\r\n            });\r\n        }\r\n        return map;\r\n    }\r\n\r\n    /**\r\n     * Affiche le contenu de la collection dans la console\r\n     */\r\n    prettyPrint(){\r\n        let map = this.getAttributesValuesKeysMap();\r\n        if(map.length < 1){\r\n            console.log(\"Map des attributs vide\");\r\n        }else{\r\n            map.forEach(attribute => {\r\n                console.log(`Valeurs pour l'attribut '${attribute}' :`);\r\n                map[attribute].forEach(value => {\r\n                    console.log(`\\t${value}`) ;\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Singleton de la collection instancier au démarrage de l'application.\r\n * @type {AttributesCollection}\r\n */\r\nexport const singleton = new AttributesCollection();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/AttributesCollection.js\n// module id = 7\n// module chunks = 0","module.exports = {\"attributs\":{\"cheveux\":{\"chauve\":{\"long\":\"Le personnage est chauve ?\",\"court\":\"Chauve ?\"},\"blond\":{\"long\":\"Le personnage est blond ?\",\"court\":\"Cheveux blond ?\"},\"brun\":{\"long\":\"Le personnage est brun ?\",\"court\":\"Cheveux brun ?\"}},\"yeux\":{\"marron\":{\"long\":\"Le personnage a les yeux marron ?\",\"court\":\"Yeux marron ?\"},\"bleu\":{\"long\":\"Le personnage a les yeux bleu ?\",\"court\":\"Yeux bleu ?\"},\"vert\":{\"long\":\"Le personnage a les yeux vert ?\",\"court\":\"Yeux vert ?\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/attributs.json\n// module id = 8\n// module chunks = 0","import * as Common from './Common';\r\nimport Attribute from './Attribute';\r\nimport AttributePanel from './AttributesPanel';\r\n\r\nlet nextButtonId = 0;\r\n\r\n/**\r\n * Représente un bouton lié à un attribut.\r\n * Utilisé dans le panel 'Attributs'\r\n * @see Attribute\r\n */\r\nclass AttributeButton {\r\n    /**\r\n     * Constructeur.\r\n     * Dans le cas ou l'argument parent n'est pas un objet ou n'est pas renseigné,\r\n     * on tente de trouver la div avec l'id 'attributs' à la place.\r\n     * @param {!Attribute} attribute Une instance d'Attribute\r\n     * @param {!AttributePanel} attributePanel L'instance du panel des attributs\r\n     * @throws {Error} Lance une erreur si attribute n'est une instance d'Attribute\r\n     * @throws {Error} Lance une si l'élément d'id 'attributs' n'à pas pu être trouvé dans le cas il l'argument parent serais mal renseigné\r\n     */\r\n    constructor(attribute, attributePanel){\r\n        if(!(attribute instanceof Attribute)){\r\n            throw new Error(\"L'argument attribute doit être une instance de Attribute\");\r\n        }\r\n        if(!(attributePanel instanceof AttributePanel)){\r\n            throw new Error(\"L'argument attributePanel doit être une de AttributePanel\");\r\n        }\r\n        /**\r\n         * Référence vers l'instance du panel des attributs\r\n         * @type{AttributePanel}\r\n         */\r\n        this.attributePanel = attributePanel;\r\n\r\n        /**\r\n         * L'élément HTML du bouton\r\n         * @member{Element}\r\n         */\r\n        this.element = document.createElement(\"button\");\r\n        this.element.setAttribute(\"id\",\"attributeButton\"+nextButtonId);\r\n        this.element.setAttribute(\"class\", \"attributeButton\");\r\n        //si on ne donne pas un consommateur de event, on perd la référence à this dans le listener\r\n        this.element.addEventListener(\"click\", event => this.onClick(event));\r\n        this.attributePanel.getElement().appendChild(this.element);\r\n        nextButtonId++;\r\n        /**\r\n         * Indique si le bouton est caché ou visible\r\n         * @member{boolean}\r\n         */\r\n        this.hidden = false;\r\n        /**\r\n         * L'instance d'Attribute liée à ce bouton\r\n         * @member{Attribute}\r\n         */\r\n        this.attribute = attribute;\r\n        this.setText(this.attribute.getLongText());\r\n    }\r\n\r\n    /**\r\n     * Cache le bouton s'il est visible\r\n     */\r\n    hide(){\r\n        if(!this.hidden){\r\n            this.element.setAttribute('style', 'display: none;');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rend visible le bouton s'il est caché\r\n     */\r\n    show(){\r\n        if(this.hidden){\r\n            this.element.removeAttribute('style');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handler de l'événement 'onClick' sur l'élément HTML du bouton\r\n     * @param {Event} event l'événement onClick\r\n     */\r\n    onClick(event){\r\n        this.attributePanel.onButtonClick(this);\r\n    }\r\n\r\n    /**\r\n     * Indique si le bouton est caché ou visible\r\n     * @returns {boolean} true si le bouton est caché, false s'il est visible\r\n     */\r\n    isHidden(){\r\n        return this.hidden;\r\n    }\r\n\r\n    /**\r\n     * Définis le texte du bouton\r\n     * @param {?string} text le nouveau texte\r\n     */\r\n    setText(text){\r\n        if(typeof text === \"string\") {\r\n            this.element.innerText = text;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retourne l'attribut représenté par le bouton\r\n     * @returns {Attribute} l'attribut\r\n     */\r\n    getAttribute(){\r\n        return this.attribute;\r\n    }\r\n}\r\n\r\nexport default AttributeButton;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/AttributeButton.js\n// module id = 9\n// module chunks = 0","import Application from \"./Application\";\r\nimport * as Main from \"../Main\";\r\n\r\n/**\r\n * Classe repésentant le panel Informations\r\n */\r\nclass InformationsPanel {\r\n    /**\r\n     *\r\n     * @throws {Error} Lance une erreur si appInstance n'est pas une instance de Application\r\n     */\r\n  constructor(){\r\n  }\r\n}\r\nexport default InformationsPanel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/InformationsPanel.js\n// module id = 10\n// module chunks = 0","class Character{\r\n    constructor(json, id){\r\n        this.id = id;\r\n        this.nom = json.nom;\r\n        this.img = json.img;\r\n        this.actived = true;\r\n        this.attributs = [];\r\n        for(let i = 0; i < json.attributs.length; i++){\r\n            //this.attributs.push(getAttributeInstance(json.attributs[i].key, json.attributs[i].value));\r\n        }\r\n    }\r\n\r\n\r\n    getImg(){\r\n        return this.img;\r\n    }\r\n\r\n    getNom(){\r\n        return this.nom;\r\n    }\r\n\r\n    getAttributs(){\r\n        return this.attributs;\r\n    }\r\n\r\n    active(){\r\n        if(this.actived)return;\r\n        document.getElementById(\"charimg\" + this.id).style.filter = \"\";\r\n        document.getElementById(\"charfigure\" + this.id).style.borderColor = \"grey\";\r\n        document.getElementById(\"charstatus\" + this.id).innerHTML = \"Suspect\";\r\n        this.actived = true;\r\n    }\r\n\r\n    unactive(reason){\r\n        if(!this.actived)return;\r\n        document.getElementById(\"charimg\" + this.id).style.filter = \"grayscale(100%)\";\r\n        document.getElementById(\"charfigure\" + this.id).style.borderColor = \"#A61011\";\r\n        document.getElementById(\"charstatus\" + this.id).innerHTML = \"Eliminé : \" + reason;\r\n        this.actived = false;\r\n    }\r\n\r\n    listeAttribute(){\r\n        let res = \"\";\r\n        for(let i = 0; i < this.attributs.length; i++){\r\n            res += this.attributs[i].attributeKey + \":\" + this.attributs[i].attributeValue + \"</br>\";\r\n        }\r\n    }\r\n\r\n    check(tabAttributs){\r\n        for(let i = 0; i < tabAttributs.length; i++) {\r\n            if (this.attributs.find(tabAttributs[i]) == undefined) {\r\n                this.unactive(tabAttributs[i].court);\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n\r\nexport default Character;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/js/objects/Character.js\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}